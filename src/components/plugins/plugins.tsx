/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/eztlu9871AQ
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { CardContent, Card } from "@/components/ui/card"
import Image from "next/image"
import { JSX, SVGProps } from "react"

export default function Plugins() {
  const plugins = [
    { title: 'ABZÛ', imageAlt: 'ABZÛ', imageUrl: '/placeholder.svg', badgeText: 'Free', badgeVariant: 'default', isPremium: false },
    { title: 'Ad Infinitum', imageAlt: 'Ad Infinitum', imageUrl: '/placeholder.svg', badgeText: 'Premium', badgeVariant: 'secondary', isPremium: true },
    // Add more games here...
  ];

  return (
    <div className="bg-white min-h-screen p-4 md:p-8">
      <header className="flex items-center justify-between mb-8 md:mb-12">
        <div className="flex items-center space-x-2 md:space-x-4">
          <h1 className="text-2xl md:text-4xl font-bold text-gray-900">Plugins</h1>
        </div>
        <div className="flex items-center space-x-4 md:space-x-6">
          <Button className="text-gray-900 text-sm md:text-base flex items-center space-x-2" variant="ghost">
            <UploadIcon className="h-5 w-5 md:h-6 md:w-6" />
            <span>Upload</span>
          </Button>
        </div>
      </header>
      <div className="flex items-center space-x-2 md:space-x-4 mb-6 md:mb-8">
        <Input className="flex-1" placeholder="Game Title" />
        <Button className="text-gray-900 text-sm md:text-base" variant="ghost">
          Free
        </Button>
        <Button className="text-gray-900 text-sm md:text-base" variant="ghost">
          Premium
        </Button>
      </div>
      <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 md:gap-8">
        {plugins.map((plugin, index) => (
          <PluginCard key={index} {...plugin} />
        ))}
      </div>
    </div>
  )
}

function PluginCard({ title, imageAlt, imageUrl, badgeText, badgeVariant, isPremium }: { 
  title: string; 
  imageAlt: string; 
  imageUrl: string; 
  badgeText: string; 
  badgeVariant: string; 
  isPremium: boolean; 
}) {
  return (
    <Card className="bg-white shadow-md">
      <CardContent className="p-0">
        <Image
          alt={imageAlt}
          className="rounded-t-md w-full object-cover"
          height="200"
          src={imageUrl}
          style={{
            aspectRatio: "350/200",
            objectFit: "cover",
          }}
          width="350"
        />
        <div className="p-3 md:p-4">
          <h3 className="text-gray-900 text-base md:text-lg font-bold">{title}</h3>
          <div className="flex items-center justify-between mt-2">
            <Badge className={`text-xs md:text-sm ${isPremium ? 'bg-green-500 text-white' : ''}`} variant={badgeVariant as "default" | "destructive" | "outline" | "secondary" | null | undefined}>
              {badgeText}
            </Badge>
            <Button
              className="text-sm md:text-base bg-gray-900 text-gray-50 hover:bg-gray-900/90 focus-visible:ring-gray-950 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
              variant="default"
            >
              Install
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}

function DollarSignIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="12" x2="12" y1="2" y2="22" />
      <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6" />
    </svg>
  )
}


function UploadIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
      <polyline points="17 8 12 3 7 8" />
      <line x1="12" x2="12" y1="3" y2="15" />
    </svg>
  )
}
